Script started on 2024-01-22 17:41:47+02:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="111" LINES="16"]
To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

[?2004h]0;USER@DESKTOP: /mnt/c/Users/Lenovo/Documents/GitHub/part12-containers-applications[01;32mUSER@DESKTOP[00m:[01;34m/mnt/c/Users/Lenovo/Documents/GitHub/part12-containers-applications[00m$ docker exec -it[K[K[K[K[K[K[K[Kcontainer ls
[?2004l
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                     NAMES
12b73badde10   mongo     "docker-entrypoint.sâ€¦"   34 minutes ago   Up 34 minutes   0.0.0.0:3456->27017/tcp   todo-backend-mongo-1
[?2004h]0;USER@DESKTOP: /mnt/c/Users/Lenovo/Documents/GitHub/part12-containers-applications[01;32mUSER@DESKTOP[00m:[01;34m/mnt/c/Users/Lenovo/Documents/GitHub/part12-containers-applications[00m$ docker container lsrun -p 3000:3000 todo-backend[A
]0;USER@DESKTOP: /mnt/c/Users/Lenovo/Documents/GitHub/part12-containers-applications[01;32mUSER@DESKTOP[00m:[01;34m/mnt/c/Users/Lenovo/Documents/GitHub/part12-containers-applications[00m$ [C[C[C[C[C[C[C[3Pcontainer ls

[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K[K[Kexec -it to-do- 
backend-mongo-1 bash
[?2004l
Error response from daemon: No such container: to-do-backend-mongo-1
[?2004h]0;USER@DESKTOP: /mnt/c/Users/Lenovo/Documents/GitHub/part12-containers-applications[01;32mUSER@DESKTOP[00m:[01;34m/mnt/c/Users/Lenovo/Documents/GitHub/part12-containers-applications[00m$ docker exec -it to-do-backend-mongo-1 bash[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K

[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[Kodo-backend-mongo-1 bash
[?2004l
[?2004hroot@12b73badde10:/# mongosh
[?2004l
]0;mongosh mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000Current Mongosh Log ID:	65ae8d49c5fc1a53af094396
Connecting to:		[1m[32mmongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.1.1[0m
Using MongoDB:		7.0.5
[1m[33mUsing Mongosh[0m:		2.1.1

For mongosh info see: [1mhttps://docs.mongodb.com/mongodb-shell/[0m


To help improve our products, anonymous usage data is collected and sent to MongoDB periodically (https://www.mongodb.com/legal/privacy-policy).
You can opt-out by running the [1mdisableTelemetry()[0m command.

[1G[0J [1G[1G[0Jtest> [7Gshow dbs

Uncaught 
[1m[31mMongoServerError[0m: Command listDatabases requires authentication
[1G[0Jtest> [7G

(To exit, press Ctrl+C again or Ctrl+D or type .exit)
[1G[0Jtest> [7G.exit

[?2004hroot@12b73badde10:/# mongosh -u root -p example
[?2004l
]0;mongosh mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000Current Mongosh Log ID:	65ae8d7e06498f9e60d9de52
Connecting to:		[1m[32mmongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.1.1[0m
Using MongoDB:		7.0.5
[1m[33mUsing Mongosh[0m:		2.1.1

For mongosh info see: [1mhttps://docs.mongodb.com/mongodb-shell/[0m

[1G[0J [1G[1m[33m------[0m
   [1m[33mThe server generated these startup warnings when booting[0m
   2024-01-22T15:07:53.898+00:00: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem
   2024-01-22T15:07:54.586+00:00: /sys/kernel/mm/transparent_hugepage/enabled is 'always'. We suggest setting it to 'never'
   2024-01-22T15:07:54.586+00:00: vm.max_map_count is too low
[1m[33m------[0m

[1G[0Jtest> [7G[1G[0Jtest> show dbs[15G[1G[0Jtest> [7G[1G[0Jtest> show dbs[15G

[1madmin[0m         100.00 KiB
[1mconfig[0m        108.00 KiB
[1mlocal[0m          72.00 KiB
[1mthe_database[0m   40.00 KiB
[1G[0Jtest> [7Guse the_database

switched to db the_database
[1G[0Jthe_database> [15Gshow collections

[1mtodos[0m
[1G[0Jthe_database> [15Gdb.todos.find({})

[
  {
    _id: ObjectId([32m'65ae84c84e5aab9c8b3918eb'[39m),
    text: [32m'Write code'[39m,
    done: [33mtrue[39m
  },
  {
    _id: ObjectId([32m'65ae84c84e5aab9c8b3918ec'[39m),
    text: [32m'Learn about containers'[39m,
    done: [33mfalse[39m
  }
]
[1G[0Jthe_database> [15Gdb.todos.insertOne( {text[1D[1D[1D[1D[1G[0Jthe_database> db.todos.insertOne( { text[37G[1C[1C[1C[1C[33mtext[39m: [32m'[39m[32mI[39m[32mn[39m[32mc[39m[32mr[39m[32me[39m[32ma[39m[32ms[39m[32me[39m [32mt[39m[32mh[39m[32me[39m [32mn[39m[32mu[39m[32mm[39m[32mb[39m[32me[39m[32mr[39m [32mo[39m[32mf[39m [32mt[39m[32mo[39m[32mo[39m[32ml[39m[32ms[39m [32mi[39m[32mn[39m [32mm[39m[32my[39m [32mt[39m[32mo[39m[32mo[39m[32ml[39m[32mb[39m[32me[39m[32ml[39m[32mt[39m[32m'[39m } )[1D[1G[0Jthe_database> db.todos.insertOne[44m([49m { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m } )[91G[1D[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m } )[90G[1D[1G[0Jthe_database> db.todos.insertOne( [44m{[49m [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m } )[89G[1D[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m } )[88G[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, } )[89G[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m,  } )[90G[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, d } )[91G[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, [36mdo[39m } )[92G[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, don } )[93G[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, done } )[94G[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, [33mdone[39m: } )[95G[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, [33mdone[39m:  } )[96G[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, [33mdone[39m: f } )[97G[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, [33mdone[39m: fa } )[98G[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, [33mdone[39m: fal } )[99G[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, [33mdone[39m: fals } )[100G[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, [33mdone[39m: [33mfalse[39m } )[101G[1C[1G[0Jthe_database> db.todos.insertOne( [44m{[49m [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, [33mdone[39m: [33mfalse[39m } )[102G[1C[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, [33mdone[39m: [33mfalse[39m } )[103G[1C[1G[0Jthe_database> db.todos.insertOne[44m([49m { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, [33mdone[39m: [33mfalse[39m } )[104G[1C[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, [33mdone[39m: [33mfalse[39m } )[105G

{
  acknowledged: [33mtrue[39m,
  insertedId: ObjectId([32m'65ae8e8806498f9e60d9de53'[39m)
}
[1G[0Jthe_database> [15G[1G[0Jthe_database> db.todos.insertOne( { [33mtext[39m: [32m'Increase the number of tools in my toolbelt'[39m, [33mdone[39m: [33mfalse[39m } )[105G[1G[0Jthe_database> db.todos.find({})[32G

[
  {
    _id: ObjectId([32m'65ae84c84e5aab9c8b3918eb'[39m),
    text: [32m'Write code'[39m,
    done: [33mtrue[39m
  },
  {
    _id: ObjectId([32m'65ae84c84e5aab9c8b3918ec'[39m),
    text: [32m'Learn about containers'[39m,
    done: [33mfalse[39m
  },
  {
    _id: ObjectId([32m'65ae8e8806498f9e60d9de53'[39m),
    text: [32m'Increase the number of tools in my toolbelt'[39m,
    done: [33mfalse[39m
  }
]
[1G[0Jthe_database> [15G.exit

[?2004hroot@12b73badde10:/# exit
[?2004l
exit
[?2004h]0;USER@DESKTOP: /mnt/c/Users/Lenovo/Documents/GitHub/part12-containers-applications[01;32mUSER@DESKTOP[00m:[01;34m/mnt/c/Users/Lenovo/Documents/GitHub/part12-containers-applications[00m$ exit
[?2004l
exit

Script done on 2024-01-22 17:49:50+02:00 [COMMAND_EXIT_CODE="0"]
